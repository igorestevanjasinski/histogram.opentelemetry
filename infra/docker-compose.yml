version: '3'
services:
  histogram-example:
    image: histogram-example:0.0.1
    environment:
      OTEL_RESOURCE_ATTRIBUTES: service.name=histogram-example
      OTEL_TRACES_EXPORTER: otlp
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
    ports:
      - "8080:8080"
    networks:
      - api-network

      # And put them in an OTEL collector pipeline...
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.83.0
    restart: always
    command: [ "--config=/etc/otelcol-contrib/otel-collector.yaml" ]
    volumes:
      - ./otel-collector.yaml:/etc/otelcol-contrib/otel-collector.yaml
    ports:
      - "4317" #grpc
      - "4318" #http
      - "8888" #otel_collector metrics
      - "8889" #span metrics connector metrics
    networks:
      - api-network

  # To eventually offload to Tempo...
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    networks:
      - api-network

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - api-network

  grafana:
    image: grafana/grafana:10.1.1
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
    networks:
      - api-network
networks:
  api-network: